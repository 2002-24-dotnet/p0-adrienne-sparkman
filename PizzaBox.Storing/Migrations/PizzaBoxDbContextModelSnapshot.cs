// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaBox.Storing.Databases;

namespace PizzaBox.Storing.Migrations
{
    [DbContext(typeof(PizzaBoxDbContext))]
    partial class PizzaBoxDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaBox.Domain.Models.Crust", b =>
                {
                    b.Property<long>("CrustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CrustId");

                    b.ToTable("Crust");

                    b.HasData(
                        new
                        {
                            CrustId = 1L,
                            Name = "Hand Tossed",
                            Price = 2.00m
                        },
                        new
                        {
                            CrustId = 2L,
                            Name = "New York Style",
                            Price = 2.50m
                        },
                        new
                        {
                            CrustId = 3L,
                            Name = "Thin Crust",
                            Price = 2.50m
                        },
                        new
                        {
                            CrustId = 4L,
                            Name = "Deep Dish",
                            Price = 3.50m
                        },
                        new
                        {
                            CrustId = 5L,
                            Name = "Gluten Free",
                            Price = 2.50m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Pizza", b =>
                {
                    b.Property<long>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CrustId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("PizzaTypeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("SizeId")
                        .HasColumnType("bigint");

                    b.HasKey("PizzaId");

                    b.HasIndex("CrustId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaTypeId");

                    b.HasIndex("SizeId");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.PizzaType", b =>
                {
                    b.Property<long>("PizzaTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PizzaTypeId");

                    b.ToTable("Type");

                    b.HasData(
                        new
                        {
                            PizzaTypeId = 637193615219187294L,
                            Name = "Cheese",
                            Price = 3.00m
                        },
                        new
                        {
                            PizzaTypeId = 637193615219215980L,
                            Name = "Pepperoni",
                            Price = 5.00m
                        },
                        new
                        {
                            PizzaTypeId = 637193615219216025L,
                            Name = "All Meat",
                            Price = 8.00m
                        },
                        new
                        {
                            PizzaTypeId = 637193615219216031L,
                            Name = "Super Supreme",
                            Price = 10.00m
                        },
                        new
                        {
                            PizzaTypeId = 637193615219216034L,
                            Name = "Hawaiian",
                            Price = 7.00m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Size", b =>
                {
                    b.Property<long>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SizeId");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            SizeId = 1L,
                            Name = "Small",
                            Price = 6.00m
                        },
                        new
                        {
                            SizeId = 2L,
                            Name = "Medium",
                            Price = 8.00m
                        },
                        new
                        {
                            SizeId = 3L,
                            Name = "Large",
                            Price = 10.00m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Topping", b =>
                {
                    b.Property<int>("ToppingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToppingId");

                    b.ToTable("Topping");

                    b.HasData(
                        new
                        {
                            ToppingId = 2,
                            Name = "Tomato Sauce"
                        },
                        new
                        {
                            ToppingId = 3,
                            Name = "Alfredo Sauce"
                        },
                        new
                        {
                            ToppingId = 14,
                            Name = "Cheese"
                        },
                        new
                        {
                            ToppingId = 1,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            ToppingId = 4,
                            Name = "Sausage"
                        },
                        new
                        {
                            ToppingId = 11,
                            Name = "Ham"
                        },
                        new
                        {
                            ToppingId = 7,
                            Name = "Bacon"
                        },
                        new
                        {
                            ToppingId = 12,
                            Name = "Pineapple"
                        },
                        new
                        {
                            ToppingId = 5,
                            Name = "Onion"
                        },
                        new
                        {
                            ToppingId = 6,
                            Name = "Mushroom"
                        },
                        new
                        {
                            ToppingId = 8,
                            Name = "Tomato"
                        },
                        new
                        {
                            ToppingId = 9,
                            Name = "Green Pepper"
                        },
                        new
                        {
                            ToppingId = 13,
                            Name = "Bannana Pepper"
                        },
                        new
                        {
                            ToppingId = 10,
                            Name = "Jalapeno"
                        },
                        new
                        {
                            ToppingId = 15,
                            Name = "Feta Cheese"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.TypeTopping", b =>
                {
                    b.Property<long>("PizzaTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("ToppingId")
                        .HasColumnType("int");

                    b.HasKey("PizzaTypeId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("TypeTopping");
                });

            modelBuilder.Entity("PizzaBox.Domain.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TimeOrdered")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaBox.Domain.Store", b =>
                {
                    b.Property<long>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            StoreId = 637193615219216968L,
                            Name = "Big Rico's Grease Extravaganza",
                            Password = "grease",
                            Username = "bigrico"
                        },
                        new
                        {
                            StoreId = 637193615219218062L,
                            Name = "Peace of Pie",
                            Password = "password",
                            Username = "pizza"
                        },
                        new
                        {
                            StoreId = 637193615219218113L,
                            Name = "'za by Tony",
                            Password = "12345",
                            Username = "tony"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("LastLocationOrderedFromStoreId")
                        .HasColumnType("bigint");

                    b.Property<int>("LastOrderTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("LastLocationOrderedFromStoreId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 637193615219218851L,
                            LastOrderTime = 0,
                            Name = "Ryan Smith",
                            Password = "12345",
                            Username = "rsmith"
                        },
                        new
                        {
                            UserId = 637193615219219831L,
                            LastOrderTime = 0,
                            Name = "Alexander Wilkins",
                            Password = "12345",
                            Username = "awilkins"
                        },
                        new
                        {
                            UserId = 637193615219219878L,
                            LastOrderTime = 0,
                            Name = "Jessa Jenkins",
                            Password = "12345",
                            Username = "jjenkins"
                        },
                        new
                        {
                            UserId = 637193615219219882L,
                            LastOrderTime = 0,
                            Name = "Wilma Stephens",
                            Password = "12345",
                            Username = "wstephens"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Pizza", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Crust", "Crust")
                        .WithMany("Pizzas")
                        .HasForeignKey("CrustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Order", "Order")
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.PizzaType", "PizzaType")
                        .WithMany("Pizzas")
                        .HasForeignKey("PizzaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.Size", "Size")
                        .WithMany("Pizzas")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.TypeTopping", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.PizzaType", "PizzaType")
                        .WithMany("TypeToppings")
                        .HasForeignKey("PizzaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.Topping", "Topping")
                        .WithMany("TypeToppings")
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Order", b =>
                {
                    b.HasOne("PizzaBox.Domain.Store", "Store")
                        .WithMany("OrderHistory")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.User", "User")
                        .WithMany("OrderHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.User", b =>
                {
                    b.HasOne("PizzaBox.Domain.Store", "LastLocationOrderedFrom")
                        .WithMany()
                        .HasForeignKey("LastLocationOrderedFromStoreId");
                });
#pragma warning restore 612, 618
        }
    }
}
